@*displays all the business plans belonging to the current user*@

@page "/plans"

@*for getting current user information*@
@inject AuthenticationStateProvider provider
@*for reading database*@
@inject ReadOnlyApi api
@*for converting Domain entities to Data entities, without the need to access Automapper and domain level*@
@inject EntityConverter entityConverter

@using Microsoft.AspNetCore.Components.Authorization @*for AuthenticationStateProvider*@
@using SuccessfulStartup.Data
@using SuccessfulStartup.Data.APIs
@using SuccessfulStartup.Data.Entities
@using SuccessfulStartup.Data.Mapping



<h1>Your Business Plans</h1>
<br />

<AuthorizeView> @*determines which content to show, based on user authorization*@

    <Authorized>

        <table class="table">
            <tr>
                <th>Title</th>
                <th>Description</th>
            </tr>
            @foreach (var plan in plans)
            {
                <tr>
                    <td>@plan.Name</td>
                    <td>@plan.Description</td>
                </tr>
            }
        </table>

        <p style="color:red">@message</p>

    </Authorized>

    <NotAuthorized>
        <p style="color:red">You must be logged in to see this information.</p>
    </NotAuthorized>

</AuthorizeView>

<br />
<p><a href="/newplan">Create a new plan</a></p>

@code {
    private List<BusinessPlan> plans { get; set; }
    private string message = "";


    protected override async Task OnParametersSetAsync() @*don't use OnInitialized, causes runtime error where model can't be found*@
    {
        plans = new List<BusinessPlan>();

        var authenticationState = await provider.GetAuthenticationStateAsync();
        var user = authenticationState.User.Identity.Name;
        var authorId = await api.GetUserIdByUsername(user);  @*gets ID of current user*@
        try
        {
            var plansDomain = await api.GetAllPlansByAuthorId(authorId);
            plans = entityConverter.Convert(plansDomain); // converts to List<BusinessPlan> type, which can be displayed
        }
        catch (Exception)
        {
            message = "Failed to load business plans from database.";
        }
    }
}
