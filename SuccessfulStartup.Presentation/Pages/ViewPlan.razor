@*view the details of an existing business plan*@

@page "/plans/{planId:int}"

@*for making API calls*@
@inject IApiCallService service
@*for page navigation*@
@inject NavigationManager navigation

@using Microsoft.AspNetCore.Components @*for NavigationManager*@
@using Microsoft.AspNetCore.Components.Authorization @*for AuthenticationStateProvider*@
@using Microsoft.AspNetCore.Components.Forms @*for EditForm*@

@using SuccessfulStartup.Api.ViewModels

<h1 id="header">Your Business Plan</h1>

<br />

<AuthorizeView> @*determines which content to show, based on user authorization*@

    <Authorized>
        <button id="update-link" class="btn btn-primary" @onclick="@(()=>navigation.NavigateTo($"plans/{planId}/update"))">Edit Your Plan</button>
        <br />
        <br />

        <h6 id="plan">Name</h6>
        <p id="name">@plan.Name</p>
        <br />

        <h6>Description</h6>
        <p id="description">@plan.Description</p>
        <br />

        <p id="message" style="color:red">@message</p>
    </Authorized>

    <NotAuthorized>
         <p style="color:red">You must be logged in to see this information.</p>
    </NotAuthorized>

</AuthorizeView>

@code {
    [Parameter]
    public int planId { get; set; }

    public string message = "";

    private BusinessPlanViewModel plan { get; set; } = new();

    protected async override Task OnParametersSetAsync() // don't use OnInitialized, results in runtime error where model cannot be found
    {
        try
        {
            plan = await service.GetPlanByIdAsync(planId); // service manages all HTTPClient requests to the API
            message = "";
        }
        catch (Exception exception)
        {
            message = $"Failed to load plan. {exception.Message} Please try again. If the problem persists, please report the following error to Support: {exception.GetType()}";
        }
    }
}
